# - area: Config Set with Boolean Values
#   tests:
#   - name: Set and get boolean values
#     steps:
#     # Clean up test keys
#     - name: Clear test keys in all scopes
#       run: cycod config clear BoolTestTrue --any
#       skipOnFailure: true
#     - run: cycod config clear BoolTestFalse --any
#       skipOnFailure: true
    
#     # Test setting true boolean value in different scopes
#     - name: Set 'true' boolean value in local scope
#       run: cycod config set BoolTestTrue true --local
#       expect-regex: |
#         LOCATION: .*\\\.cycod\\config\.yaml \(local\)
#         BoolTestTrue: true
    
#     - name: Set 'true' boolean value in user scope
#       run: cycod config set BoolTestTrue true --user
#       expect-regex: |
#         LOCATION: .*\\\.cycod\\config\.yaml \(user\)
#         BoolTestTrue: true
    
#     - name: Set 'true' boolean value in global scope
#       run: cycod config set BoolTestTrue true --global
#       expect-regex: |
#         LOCATION: .*\\\.cycod\\config\.yaml \(global\)
#         BoolTestTrue: true
    
#     # Test setting false boolean value in different scopes
#     - name: Set 'false' boolean value in local scope
#       run: cycod config set BoolTestFalse false --local
#       expect-regex: |
#         LOCATION: .*\\\.cycod\\config\.yaml \(local\)
#         BoolTestFalse: false
    
#     - name: Set 'false' boolean value in user scope
#       run: cycod config set BoolTestFalse false --user
#       expect-regex: |
#         LOCATION: .*\\\.cycod\\config\.yaml \(user\)
#         BoolTestFalse: false
    
#     - name: Set 'false' boolean value in global scope
#       run: cycod config set BoolTestFalse false --global
#       expect-regex: |
#         LOCATION: .*\\\.cycod\\config\.yaml \(global\)
#         BoolTestFalse: false
    
#     # Test retrieving boolean values
#     - name: Get true boolean value from local scope
#       run: cycod config get BoolTestTrue --local
#       expect-regex: |
#         LOCATION: .*\\\.cycod\\config\.yaml \(local\)
#         BoolTestTrue: true
    
#     - name: Get false boolean value from local scope
#       run: cycod config get BoolTestFalse --local
#       expect-regex: |
#         LOCATION: .*\\\.cycod\\config\.yaml \(local\)
#         BoolTestFalse: false
    
#     # Test case variations
#     - name: Set boolean value using uppercase TRUE
#       run: cycod config set BoolTestCase TRUE --local
#       expect-regex: |
#         LOCATION: .*\\\.cycod\\config\.yaml \(local\)
#         BoolTestCase: (?:true|TRUE)
    
#     - name: Set boolean value using uppercase FALSE
#       run: cycod config set BoolTestCase FALSE --local
#       expect-regex: |
#         LOCATION: .*\\\.cycod\\config\.yaml \(local\)
#         BoolTestCase: (?:false|FALSE)
    
#     # Test overriding boolean with other types
#     - name: Override boolean with string
#       run: cycod config set BoolTestTrue "string value" --local
#       expect-regex: |
#         LOCATION: .*\\\.cycod\\config\.yaml \(local\)
#         BoolTestTrue: string value
    
#     # Test overriding string with boolean
#     - name: Override string with boolean
#       run: cycod config set BoolTestTrue false --local
#       expect-regex: |
#         LOCATION: .*\\\.cycod\\config\.yaml \(local\)
#         BoolTestTrue: false
    
#     # Test with real-world setting example from help docs
#     - name: Set App.AutoSaveChatHistory to false
#       run: cycod config set App.AutoSaveChatHistory false --local
#       expect-regex: |
#         LOCATION: .*\\\.cycod\\config\.yaml \(local\)
#         App.AutoSaveChatHistory: false
    
#     # Clean up
#     - name: Clean up test keys
#       run: cycod config clear BoolTestTrue --any
#       skipOnFailure: true
#     - run: cycod config clear BoolTestFalse --any
#       skipOnFailure: true
#     - run: cycod config clear BoolTestCase --local
#       skipOnFailure: true
#     - run: cycod config clear App.AutoSaveChatHistory --local
#       skipOnFailure: true

