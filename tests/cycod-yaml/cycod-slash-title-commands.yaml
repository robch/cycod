class: slash-title-commands
tag: cycod
tests:
- name: title_command_test
  run: cycod --input "/title set \"My Test Title\"" --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 1 --use-openai
  expect-regex: |
    User: /title set "My Test Title"\r?\n
    Title updated to: "My Test Title" \(locked from AI changes\)\r?\n
    \r?\n
    User: /title view\r?\n
    Title:\s+My Test Title\r?\n
    Status:\s+locked\r?\n
    \r?\n
    User: exit\r?\n

- name: title_default_shows_title_and_help
  run: cycod --input "/title" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
  expect-regex: |
    User: /title\r?\n
    Title:\s+\[null\]\r?\n
    Status:\s+unlocked\r?\n
    \r?\n
    Available commands:\r?\n
    \s+/title view\s+Show current title and lock status\r?\n
    \s+/title set \"<text>\"\s+Set title and lock from AI changes\r?\n
    \s+/title lock\s+Lock current title from AI changes\r?\n
    \s+/title unlock\s+Unlock title to allow AI regeneration\r?\n
    \s+/title refresh\s+Generate new title from current conversation\r?\n
    \r?\n
    User: exit\r?\n

- name: view_when_no_title_exists_no_file
  run: cycod --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
  expect-regex: |
    User: /title view\r?\n
    Title:\s+\[null\]\r?\n
    Status:\s+unlocked\r?\n
    \r?\n
    User: exit\r?\n

- name: view_when_no_title_exists_readable_file
  run: cycod --input-chat-history testfiles/no-metadata-full-conversation.jsonl --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
  expect-regex: |
    User: /title view\r?\n
    Title:\s+\[null\]\r?\n
    Status:\s+unlocked\r?\n
    \r?\n
    User: exit\r?\n

- name: view_when_title_exists_and_is_unlocked
  run: cycod --input-chat-history testfiles/unlocked-title-full-conversation.jsonl --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
  expect-regex: |
    User: /title view\r?\n
    Title:\s+AI Generated Title\r?\n
    Status:\s+unlocked\r?\n
    \r?\n
    User: exit\r?\n

- name: view_when_title_exists_and_is_locked
  run: cycod --input-chat-history testfiles/locked-title-full-conversation.jsonl --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
  expect-regex: |
    User: /title view\r?\n
    Title:\s+AI Generated Title\r?\n
    Status:\s+locked\r?\n
    \r?\n
    User: exit\r?\n

- name: view_with_corrupted_metadata
  run: cycod --input-chat-history testfiles/malformed-metadata.jsonl --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
  expect-regex: |
    User: /title view\r?\n
    Title:\s+\[null\]\r?\n
    Status:\s+unlocked\r?\n
    \r?\n
    User: exit\r?\n

- name: title_invalid_subcommand_passes_to_assistant
  run: cycod --input "/title invalid" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
  expect-regex: |
    User: /title invalid\r?\n
    Unknown subcommand 'invalid' for /title.\r?\n
    \r?\n
    User: exit\r?\n

# - name: view_with_file_access_error
#   steps:
#   - name: Create readonly file
#     bash: |
#       cp testfiles/locked-title-full-conversation.jsonl testfiles/readonly-file.jsonl
#       chmod 000 testfiles/readonly-file.jsonl
#   - name: Test view command
#     run: cycod --input-chat-history testfiles/readonly-file.jsonl --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
#     expect-regex: |
#       User: /title view\r?\n
#       TODO\r?\n
#       \r?\n
#       User: exit\r?\n
#   - name: Cleanup
#     bash: |
#       chmod 644 testfiles/readonly-file.jsonl
#       rm -f testfiles/readonly-file.jsonl

- name: set_title_when_none_exists_writable_file
  run: cycod --input-chat-history testfiles/default-metadata-full-conversation.jsonl --input "/title set \"My Test Title\"" --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
  expect-regex: |
    User: /title set "My Test Title"\r?\n
    Title updated to: "My Test Title" \(locked from AI changes\)\r?\n
    \r?\n
    User: /title view\r?\n
    Title:\s+My Test Title\r?\n
    Status:\s+locked\r?\n
    \r?\n
    User: exit\r?\n

- name: set_single_word_title_without_quotes
  run: cycod --input-chat-history testfiles/default-metadata-full-conversation.jsonl --input "/title set MyTitle" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
  expect-regex: |
    User: /title set MyTitle\r?\n
    Error: Titles must be enclosed in double quotes\. Usage: /title set \"<title>\"\r?\n
    \r?\n
    User: exit\r?\n

- name: set_title_replace_unlocked_title
  run: cycod --input-chat-history testfiles/unlocked-title-full-conversation.jsonl --input "/title set \"New Title\"" --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
  expect-regex: |
    User: /title set "New Title"\r?\n
    Title updated to: "New Title" \(locked from AI changes\)\r?\n
    \r?\n
    User: /title view\r?\n
    Title:\s+New Title\r?\n
    Status:\s+locked\r?\n
    \r?\n
    User: exit\r?\n

- name: set_title_replace_locked_title
  run: cycod --input-chat-history testfiles/locked-title-full-conversation.jsonl --input "/title set \"Newer Title\"" --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
  expect-regex: |
    User: /title set "Newer Title"\r?\n
    Title updated to: "Newer Title" \(locked from AI changes\)\r?\n
    \r?\n
    User: /title view\r?\n
    Title:\s+Newer Title\r?\n
    Status:\s+locked\r?\n
    \r?\n
    User: exit\r?\n

- name: set_title_with_no_arguments
  run: cycod --input-chat-history testfiles/default-metadata-full-conversation.jsonl --input "/title set" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
  expect-regex: |
    User: /title set\r?\n
    Error: Titles must be enclosed in double quotes\. Usage: /title set \"<title>\"\r?\n
    \r?\n
    User: exit\r?\n

- name: set_title_with_empty_text
  run: cycod --input-chat-history testfiles/default-metadata-full-conversation.jsonl --input "/title set \"\"" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
  expect-regex: |
    User: /title set ""\r?\n
    Error: Title cannot be empty\. Please provide a title\.\r?\n
    \r?\n
    User: exit\r?\n

- name: set_title_with_whitespace_only
  run: cycod --input-chat-history testfiles/default-metadata-full-conversation.jsonl --input "/title set \"   \"" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
  expect-regex: |
    User: /title set "   "\r?\n
    Error: Title cannot be empty\. Please provide a title\.\r?\n
    \r?\n
    User: exit\r?\n

- name: set_title_multiword_without_quotes
  run: cycod --input-chat-history testfiles/default-metadata-full-conversation.jsonl --input "/title set Multi Word Title" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
  expect-regex: |
    User: /title set Multi Word Title\r?\n
    Error: Titles must be enclosed in double quotes\. Usage: /title set \"<title>\"\r?\n
    \r?\n
    User: exit\r?\n

- name: set_title_with_long_text
  run: cycod --input-chat-history testfiles/default-metadata-full-conversation.jsonl --input "/title set \"This is a very long title that exceeds the typical display limit of eighty characters and should test how the system handles lengthy title text gracefully\"" --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
  expect-regex: |
    User: /title set "This is a very long title that exceeds the typical display limit of eighty characters and should test how the system handles lengthy title text gracefully"\r?\n
    Title updated to: "This is a very long title that exceeds the typical display limit of eighty characters and should test how the system handles lengthy title text gracefully" \(locked from AI changes\)\r?\n
    \r?\n
    User: /title view\r?\n
    Title:\s+This is a very long title that exceeds the typical display limit of eighty characters and should test how the system handles lengthy title text gracefully\r?\n
    Status:\s+locked\r?\n
    \r?\n
    User: exit\r?\n

- name: set_title_with_special_characters
  run: cycod --input-chat-history testfiles/default-metadata-full-conversation.jsonl --input "/title set \"Title with apostrophes and symbols @#$\"" --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
  expect-regex: |
    User: /title set "Title with apostrophes and symbols @#\$"\r?\n
    Title updated to: "Title with apostrophes and symbols @#\$" \(locked from AI changes\)\r?\n
    \r?\n
    User: /title view\r?\n
    Title:\s+Title with apostrophes and symbols @#\$\r?\n
    Status:\s+locked\r?\n
    \r?\n
    User: exit\r?\n

- name: set_title_with_readonly_file
  steps:
  - name: Create and make readonly file
    bash: |
      cp testfiles/default-metadata-full-conversation.jsonl testfiles/readonly-test-file.jsonl
      chmod 444 testfiles/readonly-test-file.jsonl
  - name: Test set title command
    run: cycod --input-chat-history testfiles/readonly-test-file.jsonl --input "/title set \"Test Title\"" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
    expect-regex: |
      User: /title set "Test Title"\r?\n
      Title updated to: "Test Title" \(locked from AI changes\)\r?\n
      \r?\n
      User: exit\r?\n
  - name: Cleanup
    bash: |
      chmod 644 testfiles/readonly-test-file.jsonl
      rm -f testfiles/readonly-test-file.jsonl

- name: set_title_with_corrupted_metadata
  steps:
  - name: Create corrupted metadata file
    bash: |
      cp testfiles/malformed-metadata.jsonl testfiles/corrupted-test-file.jsonl
  - name: Test set title command with corrupted metadata
    run: cycod --chat-history testfiles/corrupted-test-file.jsonl --input "/title set \"Fixed Title\"" --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
    expect-regex: |
      User: /title set "Fixed Title"\r?\n
      Title updated to: "Fixed Title" \(locked from AI changes\)\r?\n
      \r?\n
      User: /title view\r?\n
      Title:\s+Fixed Title\r?\n
      Status:\s+locked\r?\n
      \r?\n
      User: exit\r?\n
  - name: Verify file was recovered with proper metadata
    bash: |
      head -1 testfiles/corrupted-test-file.jsonl | grep -q '"title":"Fixed Title"'
      head -1 testfiles/corrupted-test-file.jsonl | grep -q '"titleLocked":true'
  - name: Cleanup
    bash: rm -f testfiles/corrupted-test-file.jsonl

- name: lock_existing_unlocked_title
  steps:
  - name: Create test file with unlocked title
    bash: cp testfiles/unlocked-title-full-conversation.jsonl testfiles/lock-test-file.jsonl
  - name: Lock the title
    run: cycod --chat-history testfiles/lock-test-file.jsonl --input "/title lock" --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
    expect-regex: |
      User: /title lock\r?\n
      Title locked from AI changes\.\r?\n
      \r?\n
      User: /title view\r?\n
      Title:\s+AI Generated Title\r?\n
      Status:\s+locked\r?\n
      \r?\n
      User: exit\r?\n
  - name: Verify file was saved with locked state
    bash: |
      head -1 testfiles/lock-test-file.jsonl | grep -q '"titleLocked":true'
  - name: Cleanup
    bash: rm -f testfiles/lock-test-file.jsonl

- name: lock_already_locked_title
  run: cycod --input-chat-history testfiles/locked-title-full-conversation.jsonl --input "/title lock" --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
  expect-regex: |
    User: /title lock\r?\n
    Title is already locked\.\r?\n
    \r?\n
    User: /title view\r?\n
    Title:\s+AI Generated Title\r?\n
    Status:\s+locked\r?\n
    \r?\n
    User: exit\r?\n

- name: lock_when_no_title_exists
  steps:
  - name: Create test file with no title
    bash: cp testfiles/default-metadata-full-conversation.jsonl testfiles/lock-no-title-test.jsonl
  - name: Lock when no title exists
    run: cycod --chat-history testfiles/lock-no-title-test.jsonl --input "/title lock" --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
    expect-regex: |
      User: /title lock\r?\n
      Title locked from AI changes\.\r?\n
      \r?\n
      User: /title view\r?\n
      Title:\s+\[null\]\r?\n
      Status:\s+locked\r?\n
      \r?\n
      User: exit\r?\n
  - name: Verify file was saved with locked state
    bash: |
      head -1 testfiles/lock-no-title-test.jsonl | grep -q '"titleLocked":true'
  - name: Cleanup
    bash: rm -f testfiles/lock-no-title-test.jsonl

- name: lock_with_readonly_file
  steps:
  - name: Create readonly file
    bash: |
      cp testfiles/unlocked-title-full-conversation.jsonl testfiles/readonly-lock-test.jsonl
      chmod 444 testfiles/readonly-lock-test.jsonl
  - name: Test lock command on readonly file
    run: cycod --input-chat-history testfiles/readonly-lock-test.jsonl --input "/title lock" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
    expect-regex: |
      User: /title lock\r?\n
      Title locked from AI changes\.\r?\n
      \r?\n
      User: exit\r?\n
  - name: Cleanup
    bash: |
      chmod 644 testfiles/readonly-lock-test.jsonl
      rm -f testfiles/readonly-lock-test.jsonl

- name: lock_without_conversation_file_error
  run: cycod --input "/title lock" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
  expect-regex: |
    User: /title lock\r?\n
    Error: No conversation file to save metadata to\. Use --input-chat-history or create a conversation first\.\r?\n
    \r?\n
    User: exit\r?\n

- name: set_without_conversation_file_error
  run: cycod --input "/title set \"My Title\"" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
  expect-regex: |
    User: /title set "My Title"\r?\n
    Error: No conversation file to save metadata to\. Use --input-chat-history or create a conversation first\.\r?\n
    \r?\n
    User: exit\r?\n

- name: lock_with_no_file
  run: cycod --input "/title set \"My Title\"" --input "/title lock" --input exit --openai-api-key fake --auto-save-chat-history 1 --use-openai
  expect-regex: |
    User: /title set "My Title"\r?\n
    Title updated to: "My Title" \(locked from AI changes\)\r?\n
    \r?\n
    User: /title lock\r?\n
    Title is already locked\.\r?\n
    \r?\n
    User: exit\r?\n

- name: lock_with_corrupted_metadata
  steps:
  - name: Create test file with corrupted metadata
    bash: cp testfiles/malformed-metadata.jsonl testfiles/lock-corrupted-test.jsonl
  - name: Test lock command with corrupted metadata
    run: cycod --chat-history testfiles/lock-corrupted-test.jsonl --input "/title lock" --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
    expect-regex: |
      User: /title lock\r?\n
      Title locked from AI changes\.\r?\n
      \r?\n
      User: /title view\r?\n
      Title:\s+\[null\]\r?\n
      Status:\s+locked\r?\n
      \r?\n
      User: exit\r?\n
  - name: Verify file was recovered with corrected metadata
    bash: |
      head -1 testfiles/lock-corrupted-test.jsonl | grep -q '"titleLocked":'
  - name: Cleanup
    bash: rm -f testfiles/lock-corrupted-test.jsonl

- name: unlock_existing_locked_title
  steps:
  - name: Create test file with locked title
    bash: cp testfiles/locked-title-full-conversation.jsonl testfiles/unlock-test-file.jsonl
  - name: Unlock the title
    run: cycod --chat-history testfiles/unlock-test-file.jsonl --input "/title unlock" --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
    expect-regex: |
      User: /title unlock\r?\n
      Title unlocked - AI can now regenerate the title\.\r?\n
      \r?\n
      User: /title view\r?\n
      Title:\s+AI Generated Title\r?\n
      Status:\s+unlocked\r?\n
      \r?\n
      User: exit\r?\n
  - name: Verify file was saved with unlocked state
    bash: |
      head -1 testfiles/unlock-test-file.jsonl | grep -q '"titleLocked":false'
  - name: Cleanup
    bash: rm -f testfiles/unlock-test-file.jsonl

- name: unlock_already_unlocked_title
  run: cycod --input-chat-history testfiles/unlocked-title-full-conversation.jsonl --input "/title unlock" --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
  expect-regex: |
    User: /title unlock\r?\n
    Title is already unlocked\.\r?\n
    \r?\n
    User: /title view\r?\n
    Title:\s+AI Generated Title\r?\n
    Status:\s+unlocked\r?\n
    \r?\n
    User: exit\r?\n

- name: unlock_when_no_title_exists
  steps:
  - name: Create test file with no title
    bash: cp testfiles/default-metadata-full-conversation.jsonl testfiles/unlock-no-title-test.jsonl
  - name: Unlock when no title exists
    run: cycod --chat-history testfiles/unlock-no-title-test.jsonl --input "/title unlock" --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
    expect-regex: |
      User: /title unlock\r?\n
      Title is already unlocked\.\r?\n
      \r?\n
      User: /title view\r?\n
      Title:\s+\[null\]\r?\n
      Status:\s+unlocked\r?\n
      \r?\n
      User: exit\r?\n
  - name: Verify file was saved with unlocked state
    bash: |
      head -1 testfiles/unlock-no-title-test.jsonl | grep -q '"titleLocked":false'
  - name: Cleanup
    bash: rm -f testfiles/unlock-no-title-test.jsonl

- name: unlock_with_readonly_file
  steps:
  - name: Create readonly file
    bash: |
      cp testfiles/locked-title-full-conversation.jsonl testfiles/readonly-unlock-test.jsonl
      chmod 444 testfiles/readonly-unlock-test.jsonl
  - name: Test unlock command on readonly file
    run: cycod --input-chat-history testfiles/readonly-unlock-test.jsonl --input "/title unlock" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
    expect-regex: |
      User: /title unlock\r?\n
      Title unlocked - AI can now regenerate the title\.\r?\n
      \r?\n
      User: exit\r?\n
  - name: Cleanup
    bash: |
      chmod 644 testfiles/readonly-unlock-test.jsonl
      rm -f testfiles/readonly-unlock-test.jsonl

- name: unlock_without_conversation_file_error
  run: cycod --input "/title unlock" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
  expect-regex: |
    User: /title unlock\r?\n
    Error: No conversation file to save metadata to\. Use --input-chat-history or create a conversation first\.\r?\n
    \r?\n
    User: exit\r?\n

- name: unlock_with_no_file
  run: cycod --input "/title set \"My Title\"" --input "/title unlock" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
  expect-regex: |
    User: /title set "My Title"\r?\n
    Error: No conversation file to save metadata to\. Use --input-chat-history or create a conversation first\.\r?\n
    \r?\n
    User: /title unlock\r?\n
    Error: No conversation file to save metadata to\. Use --input-chat-history or create a conversation first\.\r?\n
    \r?\n
    User: exit\r?\n

- name: unlock_with_corrupted_metadata
  steps:
  - name: Create test file with corrupted metadata
    bash: cp testfiles/malformed-metadata.jsonl testfiles/unlock-corrupted-test.jsonl
  - name: Test unlock command with corrupted metadata
    run: cycod --chat-history testfiles/unlock-corrupted-test.jsonl --input "/title unlock" --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
    expect-regex: |
      User: /title unlock\r?\n
      Title is already unlocked\.\r?\n
      \r?\n
      User: /title view\r?\n
      Title:\s+\[null\]\r?\n
      Status:\s+unlocked\r?\n
      \r?\n
      User: exit\r?\n
  - name: Verify file was recovered with corrected metadata
    bash: |
      head -1 testfiles/unlock-corrupted-test.jsonl | grep -q '"titleLocked":'
  - name: Cleanup
    bash: rm -f testfiles/unlock-corrupted-test.jsonl

- name: set_view_sequence_test_title
  run: cycod --input "/title set \"Test Title\"" --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 1 --use-openai
  expect-regex: |
    User: /title set "Test Title"\r?\n
    Title updated to: "Test Title" \(locked from AI changes\)\r?\n
    \r?\n
    User: /title view\r?\n
    Title:\s+Test Title\r?\n
    Status:\s+locked\r?\n
    \r?\n
    User: exit\r?\n

- name: set_unlock_view_sequence
  run: cycod --input "/title set \"Test Title\"" --input "/title unlock" --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 1 --use-openai
  expect-regex: |
    User: /title set "Test Title"\r?\n
    Title updated to: "Test Title" \(locked from AI changes\)\r?\n
    \r?\n
    User: /title unlock\r?\n
    Title unlocked - AI can now regenerate the title\.\r?\n
    \r?\n
    User: /title view\r?\n
    Title:\s+Test Title\r?\n
    Status:\s+unlocked\r?\n
    \r?\n
    User: exit\r?\n

- name: set_unlock_lock_view_sequence
  run: cycod --input "/title set \"Test\"" --input "/title unlock" --input "/title lock" --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 1 --use-openai
  expect-regex: |
    User: /title set "Test"\r?\n
    Title updated to: "Test" \(locked from AI changes\)\r?\n
    \r?\n
    User: /title unlock\r?\n
    Title unlocked - AI can now regenerate the title\.\r?\n
    \r?\n
    User: /title lock\r?\n
    Title locked from AI changes\.\r?\n
    \r?\n
    User: /title view\r?\n
    Title:\s+Test\r?\n
    Status:\s+locked\r?\n
    \r?\n
    User: exit\r?\n

- name: set_title_replacement_sequence
  run: cycod --input "/title set \"First Title\"" --input "/title set \"Second Title\"" --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 1 --use-openai
  expect-regex: |
    User: /title set "First Title"\r?\n
    Title updated to: "First Title" \(locked from AI changes\)\r?\n
    \r?\n
    User: /title set "Second Title"\r?\n
    Title updated to: "Second Title" \(locked from AI changes\)\r?\n
    \r?\n
    User: /title view\r?\n
    Title:\s+Second Title\r?\n
    Status:\s+locked\r?\n
    \r?\n
    User: exit\r?\n

- name: lock_on_nonexistent_title_then_set
  steps:
  - name: Create test file with no title
    bash: cp testfiles/default-metadata-full-conversation.jsonl testfiles/lock-then-set-test.jsonl
  - name: Lock when no title exists then set title
    run: cycod --chat-history testfiles/lock-then-set-test.jsonl --input "/title lock" --input "/title set \"New Title\"" --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
    expect-regex: |
      User: /title lock\r?\n
      Title locked from AI changes\.\r?\n
      \r?\n
      User: /title set "New Title"\r?\n
      Title updated to: "New Title" \(locked from AI changes\)\r?\n
      \r?\n
      User: /title view\r?\n
      Title:\s+New Title\r?\n
      Status:\s+locked\r?\n
      \r?\n
      User: exit\r?\n
  - name: Verify file state after both operations
    bash: |
      head -1 testfiles/lock-then-set-test.jsonl | grep -q '"title":"New Title"'
      head -1 testfiles/lock-then-set-test.jsonl | grep -q '"titleLocked":true'
  - name: Cleanup
    bash: rm -f testfiles/lock-then-set-test.jsonl

# - name: set_title_with_newlines
#   run: cycod --input-chat-history testfiles/default-metadata-full-conversation.jsonl --input "/title set Title\nwith\nnewlines" --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
#   expect-regex: |
#     User: /title set Title\\nwith\\nnewlines\r?\n
#     Title updated to: "Title with newlines" \(locked from AI changes\)\r?\n
#     \r?\n
#     User: /title view\r?\n
#     Current title: "Title with newlines" \(locked\)\r?\n
#     \r?\n
#     User: exit\r?\n

- name: set_title_with_unicode_characters
  run: cycod --input-chat-history testfiles/default-metadata-full-conversation.jsonl --input "/title set \"Title with émojis 🎉 and ünïcödé\"" --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
  expect-regex: |
    User: /title set "Title with émojis 🎉 and ünïcödé"\r?\n
    Title updated to: "Title with émojis 🎉 and ünïcödé" \(locked from AI changes\)\r?\n
    \r?\n
    User: /title view\r?\n
    Title:\s+Title with émojis 🎉 and ünïcödé\r?\n
    Status:\s+locked\r?\n
    \r?\n
    User: exit\r?\n

- name: set_title_with_very_long_text
  run: cycod --input-chat-history testfiles/default-metadata-full-conversation.jsonl --input "/title set \"This is an exceptionally long title that significantly exceeds one hundred characters in total length and is designed to test how the system handles very lengthy title text without any display truncation or storage issues\"" --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
  expect-regex: |
    User: /title set "This is an exceptionally long title that significantly exceeds one hundred characters in total length and is designed to test how the system handles very lengthy title text without any display truncation or storage issues"\r?\n
    Title updated to: "This is an exceptionally long title that significantly exceeds one hundred characters in total length and is designed to test how the system handles very lengthy title text without any display truncation or storage issues" \(locked from AI changes\)\r?\n
    \r?\n
    User: /title view\r?\n
    Title:\s+This is an exceptionally long title that significantly exceeds one hundred characters in total length and is designed to test how the system handles very lengthy title text without any display truncation or storage issues\r?\n
    Status:\s+locked\r?\n
    \r?\n
    User: exit\r?\n

- name: rapid_sequential_commands
  run: cycod --input-chat-history testfiles/default-metadata-full-conversation.jsonl --input "/title set \"First\"" --input "/title view" --input "/title unlock" --input "/title lock" --input "/title set \"Second\"" --input "/title view" --input "/title unlock" --input "/title set \"Third\"" --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
  expect-regex: |
    User: /title set "First"\r?\n
    Title updated to: "First" \(locked from AI changes\)\r?\n
    \r?\n
    User: /title view\r?\n
    Title:\s+First\r?\n
    Status:\s+locked\r?\n
    \r?\n
    User: /title unlock\r?\n
    Title unlocked - AI can now regenerate the title\.\r?\n
    \r?\n
    User: /title lock\r?\n
    Title locked from AI changes\.\r?\n
    \r?\n
    User: /title set "Second"\r?\n
    Title updated to: "Second" \(locked from AI changes\)\r?\n
    \r?\n
    User: /title view\r?\n
    Title:\s+Second\r?\n
    Status:\s+locked\r?\n
    \r?\n
    User: /title unlock\r?\n
    Title unlocked - AI can now regenerate the title\.\r?\n
    \r?\n
    User: /title set "Third"\r?\n
    Title updated to: "Third" \(locked from AI changes\)\r?\n
    \r?\n
    User: /title view\r?\n
    Title:\s+Third\r?\n
    Status:\s+locked\r?\n
    \r?\n
    User: exit\r?\n

- name: view_with_extra_arguments_ignored
  run: cycod --input-chat-history testfiles/default-metadata-full-conversation.jsonl --input "/title view extra arguments ignored" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
  expect-regex: |
    User: /title view extra arguments ignored\r?\n
    Title:\s+\[null\]\r?\n
    Status:\s+unlocked\r?\n
    \r?\n
    User: exit\r?\n

- name: lock_with_extra_arguments_ignored
  run: cycod --input-chat-history testfiles/default-metadata-full-conversation.jsonl --input "/title lock extra arguments ignored" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
  expect-regex: |
    User: /title lock extra arguments ignored\r?\n
    Title locked from AI changes\.\r?\n
    \r?\n
    User: exit\r?\n

# ====================================================================
# CRITICAL MISSING TESTS - Quote Parsing Edge Cases
# ====================================================================

- name: set_title_malformed_quotes_unclosed
  run: cycod --input "/title set \"unclosed quote" --input exit --openai-api-key fake --auto-save-chat-history 1 --use-openai
  expect-regex: |
    User: /title set "unclosed quote\r?\n
    Error: Titles must be enclosed in double quotes\. Usage: /title set \"<title>\"\r?\n
    \r?\n
    User: exit\r?\n

- name: set_title_malformed_quotes_trailing_only
  run: cycod --input "/title set trailing quote\"" --input exit --openai-api-key fake --auto-save-chat-history 1 --use-openai
  expect-regex: |
    User: /title set trailing quote"\r?\n
    Error: Titles must be enclosed in double quotes\. Usage: /title set \"<title>\"\r?\n
    \r?\n
    User: exit\r?\n

- name: set_title_with_nested_quotes_no_escaping
  run: cycod --input "/title set \"Title with \"inner\" quotes\"" --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 1 --use-openai
  expect-regex: |
    User: /title set "Title with "inner" quotes"\r?\n
    Title updated to: "Title with "inner" quotes" \(locked from AI changes\)\r?\n
    \r?\n
    User: /title view\r?\n
    Title:\s+Title with "inner" quotes\r?\n
    Status:\s+locked\r?\n
    \r?\n
    User: exit\r?\n

- name: set_title_only_quotes
  run: cycod --input "/title set \"\"\"" --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 1 --use-openai
  expect-regex: |
    User: /title set """\r?\n
    Title updated to: """ \(locked from AI changes\)\r?\n
    \r?\n
    User: /title view\r?\n
    Title:\s+\"\r?\n
    Status:\s+locked\r?\n
    User: exit\r?\n

- name: set_title_leading_trailing_spaces_in_quotes
  run: cycod --input "/title set \"  Title with spaces  \"" --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 1 --use-openai
  expect-regex: |
    User: /title set "  Title with spaces  "\r?\n
    Title updated to: "  Title with spaces  " \(locked from AI changes\)\r?\n
    \r?\n
    User: /title view\r?\n
    Title:\s+  Title with spaces  \r?\n
    Status:\s+locked\r?\n
    \r?\n
    User: exit\r?\n

# ====================================================================
# CRITICAL MISSING TESTS - Case Sensitivity and Whitespace Handling
# ====================================================================

- name: title_subcommands_case_insensitive
  run: cycod --input "/title VIEW" --input "/title Set \"Test\"" --input "/title LOCK" --input exit --openai-api-key fake --auto-save-chat-history 1 --use-openai
  expect-regex: |
    User: /title VIEW\r?\n
    Title:\s+\[null\]\r?\n
    Status:\s+unlocked\r?\n
    \r?\n
    User: /title Set "Test"\r?\n
    Title updated to: "Test" \(locked from AI changes\)\r?\n
    \r?\n
    User: /title LOCK\r?\n
    Title is already locked\.\r?\n
    \r?\n
    User: exit\r?\n

- name: title_extra_whitespace_handling
  run: cycod --input "/title    set     \"Multiple   Spaces\"" --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 1 --use-openai
  expect-regex: |
    User: /title    set     "Multiple   Spaces"\r?\n
    Title updated to: "Multiple   Spaces" \(locked from AI changes\)\r?\n
    \r?\n
    User: /title view\r?\n
    Title:\s+Multiple   Spaces\r?\n
    Status:\s+locked\r?\n
    \r?\n
    User: exit\r?\n

# ====================================================================
# CRITICAL MISSING TESTS - Metadata Corruption Recovery
# ====================================================================

- name: view_with_completely_invalid_json
  steps:
  - name: Create file with invalid JSON
    bash: |
      echo '{"_meta": "not-valid-json"}' > testfiles/invalid-json-test.jsonl
  - name: Test view command graceful fallback
    run: cycod --input-chat-history testfiles/invalid-json-test.jsonl --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
    expect-regex: |
      User: /title view\r?\n
      Title:\s+\[null\]\r?\n
      Status:\s+unlocked\r?\n
      \r?\n
      User: exit\r?\n
  - name: Cleanup
    bash: rm -f testfiles/invalid-json-test.jsonl

- name: view_with_wrong_meta_structure
  steps:
  - name: Create file with wrong structure
    bash: |
      echo '{"_meta": "should-be-object"}' > testfiles/wrong-structure-test.jsonl
  - name: Test graceful fallback
    run: cycod --input-chat-history testfiles/wrong-structure-test.jsonl --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
    expect-regex: |
      User: /title view\r?\n
      Title:\s+\[null\]\r?\n
      Status:\s+unlocked\r?\n
      \r?\n
      User: exit\r?\n
  - name: Cleanup
    bash: rm -f testfiles/wrong-structure-test.jsonl

- name: set_title_with_missing_meta_key
  steps:
  - name: Create file with missing _meta key
    bash: |
      echo '{"notmeta": {"title": "Should be ignored"}}' > testfiles/missing-meta-key-test.jsonl
  - name: Test treats as no metadata
    run: cycod --input-chat-history testfiles/missing-meta-key-test.jsonl --input "/title set \"New Title\"" --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
    expect-regex: |
      User: /title set "New Title"\r?\n
      Title updated to: "New Title" \(locked from AI changes\)\r?\n
      \r?\n
      User: /title view\r?\n
      Title:\s+New Title\r?\n
      Status:\s+locked\r?\n
      \r?\n
      User: exit\r?\n
  - name: Cleanup
    bash: rm -f testfiles/missing-meta-key-test.jsonl

# ====================================================================
# CRITICAL MISSING TESTS - Content Validation Edge Cases
# ====================================================================

- name: set_title_numeric_only
  run: cycod --input "/title set \"12345\"" --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 1 --use-openai
  expect-regex: |
    User: /title set "12345"\r?\n
    Title updated to: "12345" \(locked from AI changes\)\r?\n
    \r?\n
    User: /title view\r?\n
    Title:\s+12345\r?\n
    Status:\s+locked\r?\n
    \r?\n
    User: exit\r?\n

- name: set_title_special_chars_only
  run: cycod --input "/title set \"@#$%^&*()\"" --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 1 --use-openai
  expect-regex: |
    User: /title set "@#\$%\^\&\*\(\)"\r?\n
    Title updated to: "@#\$%\^\&\*\(\)" \(locked from AI changes\)\r?\n
    \r?\n
    User: /title view\r?\n
    Title:\s+@#\$%\^\&\*\(\)\r?\n
    Status:\s+locked\r?\n
    \r?\n
    User: exit\r?\n

- name: set_title_single_character
  run: cycod --input "/title set A" --input exit --openai-api-key fake --auto-save-chat-history 1 --use-openai
  expect-regex: |
    User: /title set A\r?\n
    Error: Titles must be enclosed in double quotes\. Usage: /title set \"<title>\"\r?\n
    \r?\n
    User: exit\r?\n

# ====================================================================
# CRITICAL MISSING TESTS - Extensibility Testing
# ====================================================================

- name: set_title_preserves_unknown_metadata_fields
  steps:
  - name: Create file with extra metadata fields
    bash: |
      echo '{"_meta":{"title":"Old","titleLocked":false,"customField":"preserved","version":2}}' > testfiles/extra-fields-test.jsonl
  - name: Set new title
    run: cycod --chat-history testfiles/extra-fields-test.jsonl --input "/title set \"New Title\"" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
    expect-regex: |
      User: /title set "New Title"\r?\n
      Title updated to: "New Title" \(locked from AI changes\)\r?\n
      \r?\n
      User: exit\r?\n
  - name: Verify extra fields preserved and title updated
    bash: |
      head -1 testfiles/extra-fields-test.jsonl | grep -q '"customField":"preserved"'
      head -1 testfiles/extra-fields-test.jsonl | grep -q '"version":2'
      head -1 testfiles/extra-fields-test.jsonl | grep -q '"title":"New Title"'
      head -1 testfiles/extra-fields-test.jsonl | grep -q '"titleLocked":true'
  - name: Cleanup
    bash: rm -f testfiles/extra-fields-test.jsonl

- name: lock_preserves_unknown_metadata_fields
  steps:
  - name: Create file with extra metadata and title
    bash: |
      echo '{"_meta":{"title":"Existing","titleLocked":false,"customData":{"nested":"value"}}}' > testfiles/lock-extra-fields-test.jsonl
  - name: Lock the title
    run: cycod --chat-history testfiles/lock-extra-fields-test.jsonl --input "/title lock" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
    expect-regex: |
      User: /title lock\r?\n
      Title locked from AI changes\.\r?\n
      \r?\n
      User: exit\r?\n
  - name: Verify extra fields preserved and lock status updated
    bash: |
      head -1 testfiles/lock-extra-fields-test.jsonl | grep -q '"customData":{"nested":"value"}'
      head -1 testfiles/lock-extra-fields-test.jsonl | grep -q '"titleLocked":true'
      head -1 testfiles/lock-extra-fields-test.jsonl | grep -q '"title":"Existing"'
  - name: Cleanup
    bash: rm -f testfiles/lock-extra-fields-test.jsonl

# ====================================================================
# CRITICAL MISSING TESTS - Stress and Boundary Testing
# ====================================================================

- name: set_title_extremely_long
  run: cycod --input "/title setinput "/title view" --input exit --openai-api-key fake --auto-save-chat-history 1 --use-openai
  expect-regex: |
    User: /title setr?\n
    Title updated tolocked from AI changes\)\r?\n
    \r?\n
    User: /title view\r?\n
    Title:\sr?\n
    Status:\s+locked\r?\n
    \r?\n
    User: exit\r?\n

- name: title_with_comprehensive_unicode
  run: cycod --input "/title set \"🎉💻αβγδ中文한글العربية русский\"" --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 1 --use-openai
  expect-regex: |
    User: /title set "🎉💻αβγδ中文한글العربية русский"\r?\n
    Title updated to: "🎉💻αβγδ中文한글العربية русский" \(locked from AI changes\)\r?\n
    \r?\n
    User: /title view\r?\n
    Title:\s+🎉💻αβγδ中文한글العربية русский\r?\n
    Status:\s+locked\r?\n
    \r?\n
    User: exit\r?\n

- name: rapid_title_operations_stress_test
  run: cycod --input-chat-history testfiles/default-metadata-full-conversation.jsonl --input "/title set \"A\"" --input "/title unlock" --input "/title lock" --input "/title set \"B\"" --input "/title unlock" --input "/title set \"C\"" --input "/title lock" --input "/title set \"D\"" --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
  expect-regex: |
    User: /title set "A"\r?\n
    Title updated to: "A" \(locked from AI changes\)\r?\n
    \r?\n
    User: /title unlock\r?\n
    Title unlocked - AI can now regenerate the title\.\r?\n
    \r?\n
    User: /title lock\r?\n
    Title locked from AI changes\.\r?\n
    \r?\n
    User: /title set "B"\r?\n
    Title updated to: "B" \(locked from AI changes\)\r?\n
    \r?\n
    User: /title unlock\r?\n
    Title unlocked - AI can now regenerate the title\.\r?\n
    \r?\n
    User: /title set "C"\r?\n
    Title updated to: "C" \(locked from AI changes\)\r?\n
    \r?\n
    User: /title lock\r?\n
    Title is already locked\.\r?\n
    \r?\n
    User: /title set "D"\r?\n
    Title updated to: "D" \(locked from AI changes\)\r?\n
    \r?\n
    User: /title view\r?\n
    Title:\s+D\r?\n
    Status:\s+locked\r?\n
    \r?\n
    User: exit\r?\n

# CRITICAL MISSING TESTS - Quote Parsing Edge Cases for Issue Reproduction
# ====================================================================

- name: set_title_malformed_quotes_mixed_shell_parsing
  run: cycod --input "/title set \"fooey \" here we go\"" --input "/title view" --input exit --openai-api-key fake --auto-save-chat-history 1 --use-openai
  expect-regex: |
    User: /title set "fooey " here we go"\r?\n
    Title updated to: "fooey " here we go" \(locked from AI changes\)\r?\n
    \r?\n
    User: /title view\r?\n
    Title:\s+fooey " here we go\r?\n
    Status:\s+locked\r?\n
    \r?\n
    User: exit\r?\n

- name: set_preserves_unknown_metadata_fields
  steps:
  - name: Create file with extra metadata fields
    bash: |
      echo '{"_meta":{"title":"Old Title","titleLocked":false,"customField":"preserved","version":2,"nested":{"data":"value"}}}' > testfiles/metadata-preservation-test.jsonl
  - name: Set new title and verify preservation
    run: cycod --chat-history testfiles/metadata-preservation-test.jsonl --input "/title set \"New Title\"" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
    expect-regex: |
      User: /title set "New Title"\r?\n
      Title updated to: "New Title" \(locked from AI changes\)\r?\n
      \r?\n
      User: exit\r?\n
  - name: Verify all fields preserved and title updated
    bash: |
      head -1 testfiles/metadata-preservation-test.jsonl | grep -q '"customField":"preserved"' &&
      head -1 testfiles/metadata-preservation-test.jsonl | grep -q '"version":2' &&
      head -1 testfiles/metadata-preservation-test.jsonl | grep -q '"nested":{"data":"value"}' &&
      head -1 testfiles/metadata-preservation-test.jsonl | grep -q '"title":"New Title"' &&
      head -1 testfiles/metadata-preservation-test.jsonl | grep -q '"titleLocked":true'
  - name: Cleanup
    bash: rm -f testfiles/metadata-preservation-test.jsonl

- name: lock_unlock_preserves_unknown_metadata_fields
  steps:
  - name: Create file with extra metadata and existing title
    bash: |
      echo '{"_meta":{"title":"Existing Title","titleLocked":false,"customData":{"nested":"value"},"appVersion":"1.2.3"}}' > testfiles/lock-unlock-metadata-test.jsonl
  - name: Lock then unlock and verify preservation
    run: cycod --chat-history testfiles/lock-unlock-metadata-test.jsonl --input "/title lock" --input "/title unlock" --input exit --openai-api-key fake --auto-save-chat-history 0 --use-openai
    expect-regex: |
      User: /title lock\r?\n
      Title locked from AI changes\.\r?\n
      \r?\n
      User: /title unlock\r?\n
      Title unlocked - AI can now regenerate the title\.\r?\n
      \r?\n
      User: exit\r?\n
  - name: Verify all fields preserved and lock status updated
    bash: |
      head -1 testfiles/lock-unlock-metadata-test.jsonl | grep -q '"customData":{"nested":"value"}' &&
      head -1 testfiles/lock-unlock-metadata-test.jsonl | grep -q '"appVersion":"1.2.3"' &&
      head -1 testfiles/lock-unlock-metadata-test.jsonl | grep -q '"title":"Existing Title"' &&
      head -1 testfiles/lock-unlock-metadata-test.jsonl | grep -q '"titleLocked":false'
  - name: Cleanup
    bash: rm -f testfiles/lock-unlock-metadata-test.jsonl

