using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;

namespace CycodBench.Models
{
    /// <summary>
    /// Represents the evaluation result of a solution against a problem.
    /// </summary>
    public class Result
    {
        /// <summary>
        /// Dataset name or path the problem came from.
        /// </summary>
        [JsonPropertyName("problem_dataset")]
        public string ProblemDataset { get; set; } = string.Empty;
        
        /// <summary>
        /// Problem ID this solution is for.
        /// </summary>
        [JsonPropertyName("problem_id")]
        public string ProblemId { get; set; } = string.Empty;
        
        /// <summary>
        /// Index of the problem within a dataset.
        /// </summary>
        [JsonPropertyName("problem_idx")]
        public int ProblemIdx { get; set; }
        
        /// <summary>
        /// Unique solution identifier composed of problem ID, index, and timestamp.
        /// </summary>
        [JsonPropertyName("id")]
        public string Id { get; set; } = string.Empty;
        
        /// <summary>
        /// The code patch generated by the agent.
        /// </summary>
        [JsonPropertyName("agent_patch")]
        public string AgentPatch { get; set; } = string.Empty;
        
        /// <summary>
        /// The output/logs generated by the agent while solving the problem.
        /// </summary>
        [JsonPropertyName("agent_output")]
        public string AgentOutput { get; set; } = string.Empty;

        /// <summary>
        /// Evaluation status: passed, failed, or skipped.
        /// </summary>
        [JsonPropertyName("eval_status")]
        public string EvalStatus { get; set; } = string.Empty;
        
        /// <summary>
        /// Evaluation output including test results and logs.
        /// </summary>
        [JsonPropertyName("eval_output")]
        public string EvalOutput { get; set; } = string.Empty;
    }
    
    /// <summary>
    /// Represents a collection of evaluation results.
    /// </summary>
    public class ResultCollection
    {
        /// <summary>
        /// List of evaluation results.
        /// </summary>
        [JsonPropertyName("results")]
        public List<Result> Results { get; set; } = new List<Result>();
    }
}