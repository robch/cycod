CYCOD CONFIGURATION FEATURES

  CycoD offers multiple configuration features for different needs:
  - Aliases: Command-line shortcuts
  - Prompts: In-chat text templates
  - Configs: Persistent settings
  - Profiles: Bundled configurations

  All features use a common scoping system (local, user, global).

SCOPING SYSTEM

  LOCAL SCOPE
    - Stored in .cycod/[feature] directory of current location
    - Only applies to the current directory
    - Takes precedence over user and global scopes

  USER SCOPE
    - Stored in user's .cycod/[feature] directory
    - Applies to the current user in any directory
    - Takes precedence over global scope

  GLOBAL SCOPE
    - Stored in system-wide configuration
    - Available to all users on the system

ALIASES

  PURPOSE
    Command-line shortcuts for launching CycoD with specific parameters.

  USAGE
    cycod --aliasname
    
  CREATION
    cycod alias add ALIAS_NAME "COMMAND"          Local scope (default)
    cycod alias add ALIAS_NAME "COMMAND" --user   User scope
    cycod alias add ALIAS_NAME "COMMAND" --global Global scope

  MANAGEMENT
    cycod alias list                          List all aliases
    cycod alias get ALIAS_NAME                Show an alias
    cycod alias delete ALIAS_NAME             Delete an alias

CUSTOM PROMPTS

  PURPOSE
    Text templates for quick insertion into chat conversations.

  USAGE
    In a chat session: /promptname
    
  CREATION
    cycod prompt create NAME "TEXT"           Local scope (default)
    cycod prompt create NAME "TEXT" --user    User scope
    cycod prompt create NAME "TEXT" --global  Global scope

  MANAGEMENT
    cycod prompt list                         List all prompts
    cycod prompt get PROMPT_NAME              Show a prompt
    cycod prompt delete PROMPT_NAME           Delete a prompt

CONFIG FILES

  PURPOSE
    Store persistent settings for the application.

  MANAGEMENT
    cycod config list                         List all settings
    cycod config get KEY                      Show a setting
    cycod config set KEY VALUE                Change a setting
    cycod config clear KEY                    Remove a setting
    cycod config add KEY VALUE                Add to a list setting
    cycod config remove KEY VALUE             Remove from a list setting

  SCOPE OPTIONS
    --local, -l     Local scope (default for most commands)
    --user, -u      User scope (current user)
    --global, -g    Global scope (all users)
    --any, -a       All scopes (default for 'list' and 'get' commands)

PROFILES

  PURPOSE
    Collections of settings that can be loaded as a unit.

  USAGE
    cycod --profile PROFILENAME
    
  CREATION
    cycod profile create NAME                     Local scope (default)
    cycod profile create NAME --user              User scope
    cycod profile create NAME --global            Global scope
    
  MANAGEMENT
    cycod profile list                            List all profiles
    cycod profile get PROFILE_NAME                Show a profile
    cycod profile delete PROFILE_NAME             Delete a profile
    
  STORAGE
    Profiles are YAML files stored in:
    - .cycod/profiles/ (local)
    - ~/.cycod/profiles/ (user)
    - /etc/cycod/profiles/ (global, on Linux/macOS)
    - C:\ProgramData\cycod\profiles\ (global, on Windows)

WHEN TO USE EACH FEATURE

  ALIASES
    When you want to save command-line options for development workflows.
    Example: cycod --react-dev (includes React expertise + auto-approve file ops)

  PROMPTS
    When you need specialized analysis templates during development.
    Example: /code-review (comprehensive security and performance analysis)

  CONFIG
    For persistent application settings and team configurations.
    Example: cycod config set OPENAI_CHAT_MODEL_NAME gpt-5-mini

  PROFILES
    When you want to switch between development environments.
    Example: cycod --profile production (different model + stricter function controls)

SEE ALSO

  cycod help alias
  cycod help prompt
  cycod help config
  cycod help options
  cycod help settings
  cycod help use github copilot
  cycod help use anthropic
  cycod help use azure openai
  cycod help use bedrock
  cycod help use gemini
  cycod help use grok
  cycod help use openai
  cycod help function calls
  cycod help timeouts