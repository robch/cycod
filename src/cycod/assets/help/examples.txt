USAGE: cycod [...]

EXAMPLES

  EXAMPLE 1: Ask a single question

    cycod --question "What time is it?"

  EXAMPLE 2: Automatically approve function calls

    cycod --question "What time is it?" --auto-approve *

  EXAMPLE 3: Use multiple sequential inline inputs

    cycod --inputs "What's today's date?" "show me a calendar for this month"
    
  EXAMPLE 4: Continue the most recent chat history

    cycod --continue --question "Next month?"

  EXAMPLE 5: Save chat history in JSONL format

    cycod --question "Tell me a joke" --output-chat-history chat-history.jsonl

  EXAMPLE 6: Continue chat, after loading chat history from a JSONL file

    cycod --input-chat-history chat-history.jsonl --question "Tell me another"

  EXAMPLE 7: Save chat history in human readable trajectory format
  
    cycod --question "What time is it?" --output-trajectory trajectory.md

  EXAMPLE 8: Use additional system prompt with the base system prompt
  
    cycod --add-system-prompt "Never access files outside the current directory."

  EXAMPLE 9: Add a user prompt that will be included when starting a new chat
  
    cycod --add-user-prompt "Always answer in french."
    
  EXAMPLE 10: Use foreach variables to run multiple versions of a command
  
    cycod --foreach var name in Alice Bob Charlie --input "Hello, {name}!"
    
  EXAMPLE 11: Combine multiple foreach variables (creates all combinations)
  
    cycod --foreach var language in Python JavaScript Go --foreach var topic in "functions" "loops" --input "Show me how to use {topic} in {language}"

  EXAMPLE 12: Use numeric range with foreach
  
    cycod --foreach var day in 1..7 --input "What day of the week is day {day}?"

  EXAMPLE 13: Process multiple commands in parallel with threads
  
    cycod --threads 4 --foreach var topic in "sorting algorithms" "data structures" "design patterns" "algorithms" --question "Explain {topic} concisely"

  EXAMPLE 14: Using slash commands in interactive mode
  
    cycod
    > What are the largest files in this directory?
    Assistant: You can find the largest files using the following command...
    > /files *.cs
    > /find "class Program"
    > /search Python best practices
    
  EXAMPLE 15: Using an external MCP server without registration
  
    cycod --with-mcp cycod-mcp-weather
    
  EXAMPLE 16: Using both registered MCP servers and an external MCP command
  
    cycod mcp add osm --command cycod-mcp-osm
    cycod --use-mcps --with-mcp cycod-mcp-weather

SEE ALSO

  cycod help options
